
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  access: 'access',
  username: 'username',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  middleName: 'middleName',
  gender: 'gender',
  client_profile: 'client_profile',
  cellphone_no: 'cellphone_no',
  telephone_no: 'telephone_no',
  occupation: 'occupation',
  position: 'position',
  institution: 'institution',
  address: 'address',
  picture: 'picture',
  mimeType: 'mimeType',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommodityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountCommodityScalarFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  commodity_id: 'commodity_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  action: 'action',
  targetType: 'targetType',
  targetId: 'targetId',
  targetName: 'targetName',
  details: 'details',
  metadata: 'metadata',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.InventoryItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  picture: 'picture',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ItemStackScalarFieldEnum = {
  id: 'id',
  itemId: 'itemId',
  quantity: 'quantity',
  status: 'status',
  date_limit: 'date_limit',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ItemTransactionScalarFieldEnum = {
  id: 'id',
  itemStackId: 'itemStackId',
  accountId: 'accountId',
  adminId: 'adminId',
  quantity: 'quantity',
  status: 'status',
  pickupDate: 'pickupDate',
  returnDate: 'returnDate',
  requestNote: 'requestNote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeminarScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  location: 'location',
  speaker: 'speaker',
  start_date: 'start_date',
  end_date: 'end_date',
  start_time: 'start_time',
  end_time: 'end_time',
  capacity: 'capacity',
  registration_deadline: 'registration_deadline',
  status: 'status',
  picture: 'picture',
  mimeType: 'mimeType',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeminarParticipantScalarFieldEnum = {
  id: 'id',
  seminar_id: 'seminar_id',
  account_id: 'account_id',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  middleName: 'middleName',
  cellphone_no: 'cellphone_no',
  telephone_no: 'telephone_no',
  occupation: 'occupation',
  position: 'position',
  institution: 'institution',
  address: 'address',
  mimeType: 'mimeType',
  password: 'password'
};

exports.Prisma.CommodityOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  description: 'description'
};

exports.Prisma.AccountCommodityOrderByRelevanceFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  commodity_id: 'commodity_id'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.AuditLogOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  targetType: 'targetType',
  targetId: 'targetId',
  targetName: 'targetName',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};

exports.Prisma.InventoryItemOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.ItemStackOrderByRelevanceFieldEnum = {
  id: 'id',
  itemId: 'itemId'
};

exports.Prisma.ItemTransactionOrderByRelevanceFieldEnum = {
  id: 'id',
  itemStackId: 'itemStackId',
  accountId: 'accountId',
  adminId: 'adminId',
  requestNote: 'requestNote'
};

exports.Prisma.SeminarOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  location: 'location',
  speaker: 'speaker',
  start_time: 'start_time',
  end_time: 'end_time',
  mimeType: 'mimeType',
  createdById: 'createdById'
};

exports.Prisma.SeminarParticipantOrderByRelevanceFieldEnum = {
  id: 'id',
  seminar_id: 'seminar_id',
  account_id: 'account_id'
};
exports.access = exports.$Enums.access = {
  Admin: 'Admin',
  User: 'User',
  Super_Admin: 'Super_Admin'
};

exports.gender = exports.$Enums.gender = {
  Male: 'Male',
  Female: 'Female',
  Other: 'Other'
};

exports.client_profile = exports.$Enums.client_profile = {
  Fishfolk: 'Fishfolk',
  Rural_Based_Org: 'Rural_Based_Org',
  Student: 'Student',
  Agricultural_Fisheries_Technician: 'Agricultural_Fisheries_Technician',
  Youth: 'Youth',
  Women: 'Women',
  Govt_Employee: 'Govt_Employee',
  PWD: 'PWD',
  Indigenous_People: 'Indigenous_People',
  Other: 'Other'
};

exports.audit_action = exports.$Enums.audit_action = {
  ACCOUNT_CREATE: 'ACCOUNT_CREATE',
  ACCOUNT_UPDATE: 'ACCOUNT_UPDATE',
  ACCOUNT_DELETE: 'ACCOUNT_DELETE',
  ACCOUNT_ROLE_CHANGE: 'ACCOUNT_ROLE_CHANGE',
  ACCOUNT_STATUS_CHANGE: 'ACCOUNT_STATUS_CHANGE',
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  LOGIN_FAILED: 'LOGIN_FAILED',
  INVENTORY_CREATE: 'INVENTORY_CREATE',
  INVENTORY_UPDATE: 'INVENTORY_UPDATE',
  INVENTORY_DELETE: 'INVENTORY_DELETE',
  INVENTORY_STATUS_CHANGE: 'INVENTORY_STATUS_CHANGE',
  DISTRIBUTION_CREATE: 'DISTRIBUTION_CREATE',
  DISTRIBUTION_UPDATE: 'DISTRIBUTION_UPDATE',
  DISTRIBUTION_DELETE: 'DISTRIBUTION_DELETE',
  DISTRIBUTION_REQUEST_APPROVE: 'DISTRIBUTION_REQUEST_APPROVE',
  DISTRIBUTION_REQUEST_REJECT: 'DISTRIBUTION_REQUEST_REJECT',
  DISTRIBUTION_REQUEST_NO_PICKUP: 'DISTRIBUTION_REQUEST_NO_PICKUP',
  EIC_CREATE: 'EIC_CREATE',
  EIC_UPDATE: 'EIC_UPDATE',
  EIC_DELETE: 'EIC_DELETE',
  EIC_STATUS_CHANGE: 'EIC_STATUS_CHANGE',
  EIC_REQUEST_APPROVE: 'EIC_REQUEST_APPROVE',
  EIC_REQUEST_REJECT: 'EIC_REQUEST_REJECT',
  EIC_REQUEST_NO_PICKUP: 'EIC_REQUEST_NO_PICKUP',
  SEMINAR_CREATE: 'SEMINAR_CREATE',
  SEMINAR_UPDATE: 'SEMINAR_UPDATE',
  SEMINAR_DELETE: 'SEMINAR_DELETE',
  SEMINAR_STATUS_CHANGE: 'SEMINAR_STATUS_CHANGE',
  SEMINAR_PARTICIPANT_UPDATE: 'SEMINAR_PARTICIPANT_UPDATE',
  CONTENT_CREATE: 'CONTENT_CREATE',
  CONTENT_UPDATE: 'CONTENT_UPDATE',
  CONTENT_DELETE: 'CONTENT_DELETE',
  SYSTEM_BACKUP: 'SYSTEM_BACKUP',
  SYSTEM_RESTORE: 'SYSTEM_RESTORE',
  SYSTEM_MAINTENANCE: 'SYSTEM_MAINTENANCE',
  PROFILE_UPDATE: 'PROFILE_UPDATE',
  PROFILE_PICTURE_UPDATE: 'PROFILE_PICTURE_UPDATE',
  SETTINGS_UPDATE: 'SETTINGS_UPDATE'
};

exports.item_category = exports.$Enums.item_category = {
  Farming_Equipment: 'Farming_Equipment',
  Harvesting_Tools: 'Harvesting_Tools',
  Irrigation_Systems: 'Irrigation_Systems',
  Storage_Equipment: 'Storage_Equipment',
  Processing_Equipment: 'Processing_Equipment',
  Safety_Gear: 'Safety_Gear',
  Pest_Control: 'Pest_Control',
  Livestock_Equipment: 'Livestock_Equipment',
  Measuring_Tools: 'Measuring_Tools',
  Fisheries: 'Fisheries',
  Machinery: 'Machinery',
  Other: 'Other'
};

exports.item_status = exports.$Enums.item_status = {
  Available: 'Available',
  Unavailable: 'Unavailable',
  Damaged: 'Damaged',
  EIC: 'EIC',
  Distributed: 'Distributed'
};

exports.transaction_status = exports.$Enums.transaction_status = {
  Pending: 'Pending',
  Approved: 'Approved',
  Rejected: 'Rejected',
  Returned: 'Returned',
  No_Return: 'No_Return',
  late_return: 'late_return',
  No_Pickup: 'No_Pickup',
  Cancelled: 'Cancelled'
};

exports.seminar_status = exports.$Enums.seminar_status = {
  Upcoming: 'Upcoming',
  Ongoing: 'Ongoing',
  Completed: 'Completed',
  Cancelled: 'Cancelled'
};

exports.participant_status = exports.$Enums.participant_status = {
  Attended: 'Attended',
  Not_Attended: 'Not_Attended',
  Registered: 'Registered',
  Cancelled: 'Cancelled'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  Commodity: 'Commodity',
  AccountCommodity: 'AccountCommodity',
  AuditLog: 'AuditLog',
  InventoryItem: 'InventoryItem',
  ItemStack: 'ItemStack',
  ItemTransaction: 'ItemTransaction',
  Seminar: 'Seminar',
  SeminarParticipant: 'SeminarParticipant'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
